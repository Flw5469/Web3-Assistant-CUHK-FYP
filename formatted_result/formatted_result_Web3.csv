URL|news_title|news_content|date|coins_name
https://www.reddit.com/r/web3/comments/1g48vo3/is_web_3_a_philosophy_or_industry/|Is Web 3 a philosophy or industry?|"Post: Drop your comments would like to understand the whole concept of web3 as far as i know it is more hyped and more like a scam(because i got scammed a lot of times). I want to enter web3 and grab some opportunities and how to do that idk.

Comment 0: All web 3 people are smooth talker but all smooth takers are not in web3 . This very logic keeps web3 from becoming an industry(include me too )
Comment 1: Its trapped between these two worlds.

While all industries have scams, web3's reputation problem is self-inflicted. The loudest voices are marketing ""make 100X your stake"" instead of showcasing real solutions. The industry has chosen the path of quick profits over meaningful innovation.

Some ideas i have are a A web3 competitor to ADP to enable instant, minute-by-minute payments as employees clock in. Or consider education: students could receive instantly verifiable certifications without waiting for bureaucratic processing.

These solutions exist, but they're drowning in a sea of ""100x bros"" marketing. Why? Because we're still thinking in old paradigms. Instead of leveraging web3's decentralized nature to make services better, faster, and cheaper, companies are just retrofitting traditional SAAS business models onto blockchain.

Even the ""philosophical"" side of web3 bends to economic pressures. The same voices preaching decentralization talk of the bigger ideas for thr technology but realize sooner its better to market speaking gigs and podcast tours talking about it. This isn't necessarily wrong, but it reveals a truth: the ""industry"" always finds a way to commodify the ""philosophy.""

This is just my 2 cents. Been interested in web3 for years and do a ton of research, but take that for what it's worth.
Comment 2: If people are not philosophically involve in web3 there is not industry, as the only value proposition web2 can not match is decentralization.
Comment 3: I feel exactly the same way so have started looking into exactly this over last few days.
My thoughts so far are:

Real tangible opportunities exist in things such as online payments, democratised ownership.

The overall philosophy behind it is built on solid « human » values. Décentralisation as a concept is interesting and aspirational.

It’s super difficult to get into/get your head around because the jargon, lingo and « operational methodology » are SO different to what we are used to.

DAO’s are an interesting concept and worth exploring
Comment 4: Interesting question!
Comment 5: I was on this way beforehand its of course a philosophy but when you feed it money it becomes an industry, philosophers are the biggest thieves out there and a sustainable thievery machine is a business
Comment 6: Web3 is tool or technology. Scam is what some people do with it. I've been in web3 gamedev for 4 years. There are cool features but still it's a nische. And it's very money/earning oriented industry. Fun or cool features are addition to main core. In the end players focus how much money daily they can earn or if there is viral potential for token or nft
Comment 7: Neither the web3 philosophy or industry is well defined.

Philosophy - Certain things on the web should be decentralized from any authority.   
Industry - Anything related to blockchain/DLT and/or cryptocurrencies

This is the most broad and basic understanding, but if you were to hone on it more, I would say the philosophy to work as intended it has to be ""truly decentralized"" which is just not possible to do for the laymen web user. The biggest bottleneck is the centralization of domain names. The idea of .io domains being rugged pulled recently is something that would be a lot less likely if it were decentralized, and all the decentralized attempts (unstoppable domains, etc) are not accepted by major browsers that a laymen would use.  The compromise is that somewhere along the stack there is centralization (domain, hosting, etc) which makes the whole infrastructure susceptible to abuse.

My take on the web3 industry is more limited to just web infrastructure. Things like defi, nfts, and the like are more just dapps that may potentially live on web3, but don't need to. Someone can make a website hosted on their PC, have complete control of the website, but still have an NFT marketplace. Is that web3? My take is no. Its a dapp that is hosted on web2 infrastructure.
"|2024-10-15 22:21:46|['Web3', 'Market', 'Crypto']
https://www.reddit.com/r/web3/comments/1fzrrh2/i_cracked_the_code_on_web3_client_acquisition_and/|I cracked the code on Web3 client acquisition (and no, it's not just spamming Discord servers)|"Post: Hey Web3 folks,

So I've been tinkering with some growth hacking stuff for Web3 lately, and I thought I'd share some interesting things I've found. Figured it might help some of you out there trying to grow your projects or land clients.

Here's some of the cool stuff I discovered:

1. There's actually a way to spot companies about to launch tokens. Talk about good timing, right?
2. You can use AI to scan websites and figure out who might need Web3 services. Feels a bit like cheating, but in a good way.
3. Turns out, recently funded startups are goldmines if you're offering services. Makes sense when you think about it.
4. If you've got one solid client, there's a neat trick to find more just like them. It's pretty slick.
5. And get this - cold emails can actually work if you do them right. I know, I was shocked too.

I made a video diving into all this stuff because it got a bit too detailed for a Reddit post. If you're curious, [https://youtu.be/pA0mIchfup8](https://youtu.be/pA0mIchfup8)

I used a smart contract auditing company ""Quill Audits"" as an example, but it should work for most B2B stuff in Web3.

Anyway, what do you all think? Anyone tried something similar? Got any cool tricks of your own for landing Web3 clients or users? Would love to hear what's working for you.

Oh, and if this is helpful, I might dig into more specific Web3 niches later. Let me know if you'd be interested in that.  
[Web3 GTM Breakdown Youtube Link](https://youtu.be/pA0mIchfup8)  


Comment 0: [removed]
Comment 1: X Spaces are vital 

- Find spaces where they are discussing a market segment where most the speakers are the builders, project owners etc. Go in as a speaker with your solution/project/company that can help them all. Example, off-boarding journey for web3 gamers
"|2024-10-09 21:45:14|['Web3', 'Market']
https://www.reddit.com/r/web3/comments/1g3095y/web_2_business_looking_seriously_into_web_3/|Web 2 Business looking seriously into Web 3 |"Post: Hi, we run a start up active in the beverage sector(s).  
  
Our mission is ""towards a decentralised beverage sector...""  
With very limited knowledge of Web 3 i do recognise that for various reasons there could be many benefits to stepping into the Web 3 space forr us but i don't really know where to start.

Is adding a web 3 payment option a sensible starting point?  
At what stage should we consider some sort of tokenisation project and is would this potentially be viable as part of a ""crowdfunding"" exercise?  
Is there anyone we should be speaking to at this early stage?

We only operate in local markets but across but our tech, once proven can be applied and (relatively easily) scaled across other country markets.

Any help of advice much welcome



Comment 0: I have a few questions. What aspect of the industry would benefit from this? Brand building? Distribution?

Which beverages? Alcoholic ones present unique challenges that web3 can help with.

One idea i have is peer verified quality control, where small players in the space can all share the same quality protocols. Another idea in brand building would be a loyalty program with nfts. Buy 3 drinks and trade those 3 ""bronze"" nfts in for a silver. Work up to a platinum one and unlock perks for holders like a platinum members only menu or 20% off a bottle. BUT, why tokenize this? Companies have loyalty programs without it.

In my opinion, web3 payment options today still aren't the most user-friendly if it's consumers you're targeting and since you're in local markets, you have to educate the consumer on tokens, wallets and web3 as a whole if your target demo doesn't understand it. The technology building part is simple in comparison to education. Do they even want this as an option?

This is all just my 2 cents. I'm a web3 ""enthusiast"" and just want to see more industries taking advantage making cool products instead of seeing these ""100x your stake"" bros get all the attention.
Comment 1: Web3 works if your company can help make money to people.
It can be NFT that people resell or a token that appreciate in value
Comment 2: Despark can help you and your company talk to Web3 users Exploring Web3 minds unveil user sentiments about blockchains and NFTs

I completed my first survey on Despark io, and it was pretty easy! I got cashed out quickly too I liked that it only took a few minutes, and I’m thinking about trying one of the 30-minute missions next,
Comment 3: Check this out true web3 you don’t need to connect your wallet it’ll give you one and it’s free turns your posts into nfts and a variety of features https://go.dfi.space/aTGhUPMvC
Comment 4: What does a decentralised beverage sector look like? Isn't this just Direct to Consumer?
Comment 5: True decentralization/web3 is hard to profit from by design. No one entity should have a control/over exposure to the service or asset.  I suspect you are looking more to expanding your advertising to appeal to the idea of being more decentralize, while still having a controlling interest, which is fine - but know where you draw the line in how much profit/control you have.  It sounds like you already have a marketplace and just want to take a percentage; so you are the supervisor and facilitator of the market - if someone is scammed, do they contact you? These are things you have to work out where you draw the line.

Note that marketplaces like DEX and NFT marketplaces like opensea are seeing more and more regulation, even though all they really do is connect two customers together. If you do go forward dont hesitate to consult a proper lawyer versed in the matter. If a scammer uses your marketplace or embezzles money, you could be liable. 

Make sure you talk to your CPA about accepting crypto and all the reporting requirements. I do not recommend launching your own coin, there's too much regulation and risk with that right now unless you took a lot of effort to make sure there is no ICO or anything that could seem like it, even then I wouldn't risk it.
Comment 6: What does your mission statement ""towards a decentralized beverage sector"" mean concretely? Do you rely on local factories to make and distribute your beverage? Or do you cater to local tastes?

What is your vision of a decentralized beverage sector?

Maybe the Web3 has a role to play in your company, but we first need to understand what you're trying to accomplish.
Comment 7: could you accept any crypto currencies now in exchange for your products/services?
"|2024-10-14 05:25:20|['Web3', 'Market', 'Crypto']
https://www.reddit.com/r/web3/comments/1g52hl3/brainstorming_ideas_for_hackathon/|Brainstorming Ideas for Hackathon|"Post: Hey everyone! I recently finished the Rust book and have worked on some basic projects . We have a college hackathon coming up, sponsored by EthIndia, 100xDev, and Codium.

The issue: I’m struggling to come up with a strong idea combining Rust and Web3 for the hackathon. Any brainstorming would be super helpful!

Looking forward to hearing your thoughts!

Comment 0: Alof of VC cash is being thrown at the intersection between the secondary market of GPUs and web3. Very broad but look across existing computational marketplaces for ideas. Good luck!
Comment 1: I personally am a big fan of RWA or solving some of the challenges in Web3 like cross-chain interoperability.
Comment 2: I think you can use github to find a good ideas
"|2024-10-16 23:45:10|['Web3', 'Tron', 'Market']
https://www.reddit.com/r/web3/comments/1g3wwgu/are_there_organizations_similar_to_startup/|Are there organizations similar to startup accelerators or VCs that invest crypto instead of cash?|"Post: I'm building a list of capital groups that fund people that build things they love.

Curious if there are some innovative new things to check out in the crypto world.

Are there crypto credit cards? Crypto loans? Crypto angel investors?

Curious what capital sources exist.

Names and links would be much appreciated!

Comment 0: Alliance DAO
Comment 1: I love this post
Comment 2: You will be able to utilise your own token to bring on partners &amp; kols, promising your token when its launched. This is a way to fund your marketing and pr certainly.
Comment 3: This is bordering on breaking rule 3 in ""No broad questions intended to give broad answers unless its solving a problem"" but because so many people have asked for methods on how to start I will leave it up.

The one that is relatively easy and has shown to payout well is  [https://sia.tech/grants](https://sia.tech/grants)
Comment 4: There are. 
https://polkadot.com/developers/grants 
Here is an example
Comment 5: In my experience most VCs in the space are concerned more over token equity.
Comment 6: I guess a16z has one called START
"|2024-10-15 09:58:08|['Web3', 'Market', 'Crypto']
https://www.reddit.com/r/web3/comments/1g7svxk/are_ens_domains_actually_valuable/|Are ENS domains actually valuable?|"Post: Hi there!
I'm curious to know your thoughts about ENS domains.

Now that a couple of years have passed, what do you think are the main reasons a business should buy their web3 domain name?

It seems to me that while web2 domain names are absolutely crucial for most businesses, web3 domains are at best nice-to-have.

What are some examples of businesses that rely heavily on their ENS domain?

Comment 0: Personally I see no value in ENS domain unless major browsers support them. For a web3 business, it is just the culture to allow ENS domains for those extra cautious.

ENS names (like .eth) are useful shortcuts for wallets - wasn't sure if you were specifically only talking about ENS domains or the whole ENS naming protocol
"|2024-10-20 14:53:47|['Web3']
https://www.reddit.com/r/web3/comments/1g5i7zr/some_questions_about_art/|Some questions about art.|"Post: 
The web3 scenario is heavily influenced for the artistic aspect of it - it was a subject for discussion during the bull market from 2021 and it’s still a good source of income for artists. So my question is: 

If you’re a founder/builder, what do you expect from a web3 artist to be good at (besides having good art obviously)?

If you’re an artist: what are the challenges you find in this space specifically?

Comment 0: Art is actually just marketing.
Just look at best « art » on bitcoin and you will find bitcoin puppets.
The best art is the one that you can resell for a higher price that’s it
"|2024-10-17 11:56:25|['Web3', 'Bitcoin', 'Market']
https://www.reddit.com/r/web3/comments/1fyzir9/anyone_here_exploring_less_common_languages_for/|Anyone here exploring less common languages for Web3 development?|"Post: I get it - JS and Python dominate the web dev scene, but has anyone played around with Elixir or Erlang for backend or decentralized app projects? With a strong concurrency model, these languages seem underutilized for things like real-time apps, messaging, or even blockchain. 

And I also stumbled upon a hackathon recently that’s pushing these boundaries—super curious to see how these less popular stacks perform. Thoughts?

Comment 0: I've seen Java, JavaScript, Python, GoLang, Rust, and Kotlin mostly.
Comment 1: As for the smart contract code, you're more likely to be using Solidity than any of the above.

Solidity is fine and works very well with smart contract logic, although it's very limited. At some point you'll end up doing pointer arithmetic to manipulate strings or something like that. Sometimes it feels like writing in C without libraries -- and the 24.5kb contract size limit will make sure you use very few libs!

For the frontend, I did my last project in Dart (Flutter). Dart is super nice to use, it feels a lot like Typescript, but it's compiled, not interpreted. It's a lot more ergonomic than Rust, at the cost of having a garbage collector. I'd consider Dart for a Web2 backend, if the possibility of memory leaks isn't a major concern for the project.
Comment 2: I don’t get why not using python and js.
Works great, having lot of dev using it so easier to search when you have a problem.
I don’t see a point going into using less common language
Comment 3: I started studying the Elixir / Phoenix platform this year because it was recommended by the lead dev of my favorite blockchain for these reasons. What hackathon did you find?

Article: Road to 2 Million Websocket Connections in Phoenix  
[https://www.phoenixframework.org/blog/the-road-to-2-million-websocket-connections](https://www.phoenixframework.org/blog/the-road-to-2-million-websocket-connections)
"|2024-10-08 21:14:59|['Web3', 'Tron']
https://www.reddit.com/r/web3/comments/1fw5bue/how_can_i_verify_offchain_payment_like_bank/|How can I verify offchain payment like bank transfers on my blockchain? |"Post: I am working on a dapp intended for real estate dealerships, I want users to pay using fiat currencies ie USD, I want user to make payment offchain. How can I verify such transactions on chain? 

Comment 0: Like u/atrizzle said, the solution is by using an [oracle](https://en.wikipedia.org/wiki/Blockchain_oracle).

But there may be other approaches that keep your application all on-chain. Would you like to give us more detail about the purpose of your dapp?
Comment 1: You want to make sure that people see that a payment was made? That way there is always a record on chain?
Comment 2: You can have a trusted address (oracle) post transactions to the blockchain stating that such offchain payments have been made.
"|2024-10-05 01:52:02|['Web3']
https://www.reddit.com/r/web3/comments/1g79ptb/any_crypto_payment_gateway_sites_without_kyc/|Any crypto payment gateway sites WITHOUT KYC?|"Post: I want to add crypto as a payment option to my site but I don't want to preform KYC.

Comment 0: Sprintcheckout
Comment 1: Spike to spike
Comment 2: check [payid19.com](http://payid19.com)
Comment 3: Interested in this as well!
What are you building?
Comment 4: Nonkyc works pretty well.
Comment 5: Take a look at [https://kycnot.me/](https://kycnot.me/)  and the service offerings, you can use whoever they are using.

If you want complete control of accepting bitcoins and have zero fees you can run a [https://btcpayserver.org/](https://btcpayserver.org/)
"|2024-10-19 22:08:47|['Web3', 'Bitcoin', 'Crypto']
https://www.reddit.com/r/web3/comments/1g7843c/upgradeable_proxy_pattern_tradingoff_smart/|Upgradeable proxy pattern: trading-off smart contract immutability for security?|"Post: Correct me if I'm wrong, but it seems like there's a consensus among blockchain security analysts about the need to use only [upgradeable proxy](https://docs.openzeppelin.com/contracts/5.x/api/proxy) contracts for our dapps. The rationale is that bugs could be patched before someone finds out how to exploit them as security vulnerabilities.

Fair enough. But one desirable feature of dapps is the immutability of the on-chain contract. The idea being that, as a user, you can read the code and then choose to interact with it, knowing that the conditions can't change. Wouldn't upgradeability hurt user's trust in the contract?

Imagine, for example, that someone releases an NFT collection of 1000 tokens, each mintable for 1 ETH. They set a 1% royalty for market transactions and they add a very strong guarantee: holders can, at any time, refund the token for 1 ETH. The smart contract is expected to hold the minting funds for possible refunds. The contract owner only profits from resales.

With such a strong guarantee that the token value will never go below 1 ETH, it quickly sells out. But this is an upgradeable contract. What is stopping the contract owner from pushing an upgrade to drain the funds from the contract after it sells out?

That's one of the discussions we've been having in the [Neulock Web3 Password Manager](https://neulock.app/) team. We've released it using upgradeable contracts, and it makes a lot of sense, especially for a utility, non-financial dapp. We have been upgrading the contracts for optimization and to add features, based on user feedback.

But we wonder if, at some point, we should consider the smart contract API as immutable and ditch the proxy pattern. That will be something to be discussed and voted in our DAO.

What are your takes?

Comment 0: [removed]
Comment 1: From my perspective it should be a combination of both. Lets take your example with the refundable NFT. You can encapsulate the refund logic in a contract that is immutable and offers only the minimal API for refunding and buying the NFT. Here you want the benefits of immutability, but you got the downside of not being able to fix a bug. When you keep this contract as simple as possible you can manage the risk of a having a severe bug a lot better.

If you want to add other features, just do it in a separate contract. This contract can be upgradable and as long as the API of the refund contract does not let you do something malicious you should be fine.

This approach has its downsides too, because you are not as flexible as with a fully upgradable contract, but you keep the spirit of web3 and manage the risks in with going immutable as much as possible.
Comment 2: I personally would only trust a immutable contract that has been audited.  My first impression if someone has a contract that can change at anytime then they either have low confidence in their security/low funds to afford proper security/tend to rugpull
"|2024-10-19 20:47:07|['Web3', 'Tron', 'Market']
https://www.reddit.com/r/web3/comments/1g1obfv/lesser_known_chains_you_wish_had_better_wallet/|Lesser known chains you wish had better wallet options?|"Post: Hey guys; I'm just a random Software Engineer looking to build my portfolio a bit for assisting with obtaining freelance clients, due to ongoing contracts I'm currently unable to produce a product for many of the mainstream blockchains, but I can comfortably publish open-source work for some lesser-known chains without much issue. Just curious if anyone has a chain that they're following that they'd like to see a decent web/mobile wallet implementation created. **Only request is that they have a test-network available.** 

"|2024-10-12 08:31:15|['Web3']
https://www.reddit.com/r/web3/comments/1ftr6d1/scope_of_adapting_the_taptoearn_mechanics_to/|Scope of Adapting the Tap-to-Earn Mechanics to Larger PvP Web3 Games (RPGs/Adventure)|"Post: Given how Tap-to-Earn games operate with numerous transactions occurring in a short time frame, surely this requires a blockchain able to support the necessary transaction speed. Now, could we explore a similar concept for a larger game, such as a fantasy RPG (adventure/PvP)? In this case, maybe instead of simple 'taps,' players could initiate several transactions by performing specific special attacks or moves against enemies.

What do you think is the scope for this?

Comment 0: Thinking of Runescape: In game actual mining, chopping wood, killing random creatures in the wilderness etc earns you coins. Id play
Comment 1: Ronin is the go to app for web3 games.
They made axie which is by far the biggest on chain game until now
Comment 2: You want to save the activity on chain? What chain are you using and when do you want it save it? Per click or when a user hits a certain milestone?
Comment 3: Yeah, that could work! Instead of just tapping, players could earn by pulling off special moves in an RPG. You’d definitely need a fast blockchain to handle all those transactions, especially in PvP.
Comment 4: Numerous transactions occurring in a short time is not an ideal blockchain scenario, but if you choose the proper chain it would be doable but it become a bottleneck from a fee standpoint. You are likely going to want to run a layer 3 where you process the transactions for free using your own permissioned blockchain and then rollup to a layer 2 depending on your constraints
"|2024-10-01 23:41:05|['Web3']
/r/CryptoMoonShots/comments/1gf448f/wasd_bringing_innovation_to_the_gamefi_fps_games/|"WASD | Bringing innovation to the GameFi FPS Games! | Play on any device!"|"Post: 

"|2024-10-30 05:36:46|['Web3']
https://www.reddit.com/r/web3/comments/1gciem0/is_this_ec_propery_true_and_more_follow_up/|Is this EC propery true (and more follow up question bellow) ? (xpriv G) + (ypriv G) = (xpriv + ypriv) G|"Post: # 

(xpriv G) + (ypriv G) = (xpriv + ypriv) G  
G generator point  
xpriv, ypriv is integer from Fp finite field (p curve order)

\+ is + mod p

if this is true, is the following also true:

Bob can generate ethereum (ECDSA) keypair, and share his pub key with Alice,  
Alice can generate keypair and share pub key with Bob.

they can generate unified pub key by adding (ec point addition) those two pub keys, and from it  
generate valid ethereum account address.

while they keep their private keys secret, wallet address is watch-only, no single individual can sign transactions  
and move assets from that address. Only way to reconstruct private key for that wallet(account) address  
is for both Bobs and Alices private keys to be added (integer addition in Fp)

Is this know fact ? I want to make a centralized system  
but without custody of users wallets, so idea was to generate deposit addresses,  
and private keys for deposit addresses can only be constructed when both users and my centralized system  
agree on reveailing privay keys to each other.

Please tell me can this work, is it already implemented somewhere, is it wrong ?

Comment 0: Yes it can work, it is very similar to multisig or multi-party threshold cryptography.
"|2024-10-26 18:51:22|['Web3', 'Ethereum', 'Crypto']
https://www.reddit.com/r/web3/comments/1gbid5n/shortterm_storage_of_100tb_of_data/|Short-term storage of 100tb of data|"Post: I'm looking for a way to restructure my storage infrastructure without buying additional storage. I have about 100 TB of data stored on a storage server; it's not critical data, yet I also don't want to lose it.

I don't have enough spare disk to copy this off locally, so my next thought was looking at the cloud for a short-term storage solution where I could use my 10 gig Internet (enterprise quality blended bandwidth) to offload the data to a cloud resource, restructure my storage, and then import it back into the newly structured filesystem.

I looked at various public cloud providers, yet the cost is extremely prohibitive. I'd be better off buying a new server and putting it in my rack, and then I could rent this out and make money back. I don't really want to go this route.

Therefore, I'm wondering if there's a decentralized storage solution where I could send 100TB, reconfigure my storage, and then bring it back down with little expense. The restructure shouldn't take more than a day; the transfer, if I could get close to realizing my bandwidth, would take about 6 days.

Not knowing much about the decentralized storage market, is there a service that makes sense for this type of operation, both technically and monetarily?

Qualities would be:

- Fast ingress and egress of my data
- No need to duplicate the data locally
- Low cost
- Short commitment period
- Low barrier to entry for a seasoned systems engineer with little actual development background

I'd be willing to look at options where I can rent storage back to cover costs, yet I'm not sure if this is necessary.

If there's a better sub for this question, please advise and I can cross-post. I just wasn't sure where it belonged, so I went with the more general sub.

Thanks everyone in advance for your insights!

Comment 0: IPFS? 
https://web3.storage ?
https://filebase.com ?
Comment 1: [sia.tech](http://sia.tech) for web3 but it will work more like s3 glacier than s3. Standard pricing with recommended parity would probably run around \~$3/tb for 30 days of hosting (source: [https://siascan.com](https://siascan.com) ) , it is the egress that costs the most, but you could look into how to cherry pick hosts and pick one who doesn't charge egress.

[https://pixeldrain.com](https://pixeldrain.com) is a web2 solution that may be more dependable and capable of handling a 10gbit/s upload. 

In both scenarios I would try to split them into 100gb chunks
"|2024-10-25 09:03:02|['Web3', 'Market']
https://www.reddit.com/r/web3/comments/1gahygf/api_for_nft_pricing/|API for NFT Pricing|"Post: Anyone recommend an API for to get NFT price and portfolio net worth? 

Used alchemy but that endpoint was broken and support said no timeline of when it would be fixed

I tried Moralis, dapp radar. None can give me accurate data on NFT price

Comment 0: You can try Covalent: https://www.covalenthq.com or Node Real https://nodereal.io . If I think of others, will comment
Comment 1: I recommend making your own API related to the coingecko API (there is a trial version for testing or use by 1 user)
Comment 2: No API will be able to track every single NFT on all marketplaces/blockchains - However, I do believe some should get you to ""good enough"".

What specific marketplaces or blockchains do you want to target?
Comment 3: You can use nftpricefloor api maybe? For historical data for sure, but not sure about wallet value.
"|2024-10-24 02:36:56|['Web3', 'Market']
https://www.reddit.com/r/web3/comments/1fz0zns/good_chains_for_utility_dapps/|Good chains for utility dapps|"Post: GM! This week we're launching Neulock Web3 Password Manager on Ethereum L1 and Arbitrum One, Base, and Optimism L2.

We've decided to start with Ethereum and its largest L2s due to security considerations. But the user should be free to choose whatever blockchain they prefer, so we want to be present wherever the user wants us. Moreover, the only security risk of using a poor chain is to the availability: since Neulock syncs passwords without ever exporting any secrets (not even under encryption) and the frontend verifies all data, there's no risk to password confidentiality and integrity. So, while we're confident that passwords synced with Neulock will remain confidential in any chain, it's up to the user to evaluate their favorite chain's availability guarantees.

After we are done launching on Ethereum and the big L2s, we'll be looking for more niche-oriented chains that are heavy on utility dapps and privacy-minded users. Any recommendations?

Thanks in advance!



Comment 0: Nice one! Another good one is Supra, its an L1 with vertical integration of a native Oracle, VRF and containers.
Comment 1: Solana is actually by far the most user based.
Sui is not that bad too these days.
By targeting people that do memecoin trading on security aspect should be working pretty well
"|2024-10-08 22:22:14|['Web3']
